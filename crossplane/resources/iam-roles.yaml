apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: iam/v1beta1/role
  labels:
    testing.upbound.io/example-name: role
  name: role-with-inline-policy
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "eks.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }
    inlinePolicy:
      - name: my_inline_policy
        policy: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Resource": "*",
                "Action": "ec2:Describe*"
              }
            ]
          }
  providerConfigRef:
    name: provider-aws
---
apiVersion: identity.aws.upbound.io/v1beta1
kind: IAMRole
metadata:
  name: role-with-admin-access
spec:
  forProvider:
    assumeRolePolicyDocument: |-
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "ec2.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }
    description: An example IAM role with AdministratorAccess
    maxSessionDuration: 3600
    path: /
    tags:
      - key: "crossplane-kind"
        value: "iamrole.identity.aws.upbound.io"
    managedPolicyArns:
      - "arn:aws:iam::aws:policy/AdministratorAccess"
  providerConfigRef:
    name: provider-aws
